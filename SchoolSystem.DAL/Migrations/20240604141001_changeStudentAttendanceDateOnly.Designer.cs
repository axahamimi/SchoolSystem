// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolSystem.DAL.Data;

#nullable disable

namespace SchoolSystem.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240604141001_changeStudentAttendanceDateOnly")]
    partial class changeStudentAttendanceDateOnly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassId"));

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ClassSopervisor")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.HasKey("ClassId")
                        .HasName("PK__Classes__CB1927C018487C56");

                    b.HasIndex("ClassSopervisor");

                    b.HasIndex("LevelId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassChat", b =>
                {
                    b.Property<int>("ClassChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassChatId"));

                    b.Property<DateTime>("ClassChatDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ClassChatFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassChatText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Classid")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ClassChatId")
                        .HasName("PK__ClassCha__366737B734CF530D");

                    b.HasIndex("Classid");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassChats");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassChatImage", b =>
                {
                    b.Property<int>("ClassChatImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassChatImageId"));

                    b.Property<int>("ClassChatId")
                        .HasColumnType("int");

                    b.Property<string>("ClassChatImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassChatImageId")
                        .HasName("PK__ClassCha__C250115239388982");

                    b.HasIndex("ClassChatId");

                    b.ToTable("ClassChatImages");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassTimeTable", b =>
                {
                    b.Property<int>("ClassTimeTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClassTimeTableId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodEight")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodFive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodFour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodOne")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodSeven")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodSix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodThree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodTow")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheDay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassTimeTableId")
                        .HasName("PK__ClassTim__31633FB0C90DBD90");

                    b.HasIndex("ClassId");

                    b.ToTable("ClassTimeTables");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.DegreeFile", b =>
                {
                    b.Property<int>("DegreeFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DegreeFileId"));

                    b.Property<string>("DegreeFileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DegreeFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("DegreeFileId")
                        .HasName("PK__DegreeFi__BE2044515D6AB19A");

                    b.HasIndex("DegreeTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("TermId");

                    b.ToTable("DegreeFiles");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.DegreeType", b =>
                {
                    b.Property<int>("DegreeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DegreeTypeId"));

                    b.Property<string>("DegreeTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DegreeTypeId")
                        .HasName("PK__DegreeTy__DD0FA03F927C154C");

                    b.ToTable("DegreeTypes");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BED659065D6");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.FollowUpNoteBook", b =>
                {
                    b.Property<int>("FollowUpNoteBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowUpNoteBookId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FollowUpNoteBookDate")
                        .HasColumnType("date");

                    b.Property<string>("FollowUpNoteBookText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("FollowUpNoteBookId")
                        .HasName("PK__FollowUp__6482850911BFD65D");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectClassId");

                    b.HasIndex("TermId");

                    b.ToTable("FollowUpNoteBooks");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.HomeWork", b =>
                {
                    b.Property<int>("HomeWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomeWorkId"));

                    b.Property<DateTime?>("HomeWorkDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("HomeWorkDeadline")
                        .HasMaxLength(100)
                        .HasColumnType("date");

                    b.Property<decimal>("HomeWorkDegree")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("HomeWorkImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeWorkText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeWorkTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("HomeWorkdescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("HomeWorkId")
                        .HasName("PK__HomeWork__C49C70581BD491D5");

                    b.HasIndex("SubjectClassId");

                    b.HasIndex("TermId");

                    b.ToTable("HomeWorks");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.LaibaryBook", b =>
                {
                    b.Property<int>("LaibaryBookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LaibaryBookId"));

                    b.Property<string>("LaibaryBookImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaibaryBookName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LaibaryBookPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sectionid")
                        .HasColumnType("int");

                    b.HasKey("LaibaryBookId")
                        .HasName("PK__LaibaryB__FC3D9298803321D4");

                    b.HasIndex("Sectionid");

                    b.ToTable("LaibaryBooks");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelId"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LevelId")
                        .HasName("PK__Levels__09F03C26F70E87AE");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NotificationImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__20CF2E12DA626B1F");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.NotificationRole", b =>
                {
                    b.Property<int>("NotificationRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationRoleId"));

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("NotificationRoleId")
                        .HasName("PK__Notifica__D523AA901872F295");

                    b.HasIndex("NotificationId");

                    b.HasIndex("RoleId");

                    b.ToTable("NotificationRoles");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ParentSubervaisorChat", b =>
                {
                    b.Property<int>("ParentSubervaisorChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentSubervaisorChatId"));

                    b.Property<DateTime?>("ParentSubervaisorChatDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ParentSubervaisorChatFilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSubervaisorChatImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentSubervaisorChatText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Recever")
                        .HasColumnType("int");

                    b.Property<int>("Sender")
                        .HasColumnType("int");

                    b.HasKey("ParentSubervaisorChatId")
                        .HasName("PK__ParentSu__5CE078C85B846B06");

                    b.HasIndex("Recever");

                    b.HasIndex("Sender");

                    b.ToTable("ParentSubervaisorChats");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Reinforcementlesson", b =>
                {
                    b.Property<int>("ReinforcementlessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReinforcementlessonId"));

                    b.Property<DateTime?>("ReinforcementlessonDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReinforcementlessonFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReinforcementlessonTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Reinforcementlessondescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reinforcementlessonlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("ReinforcementlessonId")
                        .HasName("PK__Reinforc__B162A1F242F7F5AC");

                    b.HasIndex("SubjectClassId");

                    b.HasIndex("TermId");

                    b.ToTable("Reinforcementlessons");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE1A0CD60E92");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SectionId")
                        .HasName("PK__Sections__80EF08727656AB18");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Solution", b =>
                {
                    b.Property<int>("SolutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolutionId"));

                    b.Property<int>("HomeWorkId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SolutionDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("SolutionDegree")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("SolutionFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SolutionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Solutionnote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("SolutionId")
                        .HasName("PK__Solution__6B633AD037CE06C9");

                    b.HasIndex("HomeWorkId");

                    b.HasIndex("StudentId");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("StedentParent")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("StudentId")
                        .HasName("PK__Students__32C52B994C82E9E5");

                    b.HasIndex("ClassId");

                    b.HasIndex("StedentParent");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentAttendance", b =>
                {
                    b.Property<int>("StudentAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentAttendanceId"));

                    b.Property<DateOnly>("StudentAttendanceDate")
                        .HasColumnType("date");

                    b.Property<bool>("StudentAttendanceValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("StudentAttendanceId")
                        .HasName("PK__StudentA__6342645BD3ECC6F3");

                    b.HasIndex("StudentId");

                    b.HasIndex("TermId");

                    b.ToTable("StudentAttendances");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentDegree", b =>
                {
                    b.Property<int>("StudentDegreeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDegreeId"));

                    b.Property<int>("DegreeTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("StudentDegreeValue")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("StudentDegreenote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("StudentDegreeId")
                        .HasName("PK__StudentD__0CC89BAD7A39B2D8");

                    b.HasIndex("DegreeTypeId");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectClassId");

                    b.HasIndex("TermId");

                    b.ToTable("StudentDegrees");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentQeustion", b =>
                {
                    b.Property<int>("StudentQeustionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentQeustionId"));

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StudentQeustionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StudentQeustionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentQeustionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.Property<int>("TermId")
                        .HasColumnType("int");

                    b.HasKey("StudentQeustionId")
                        .HasName("PK__StudentQ__A171725E8EF704B1");

                    b.HasIndex("StudentId");

                    b.HasIndex("SubjectClassId");

                    b.HasIndex("TermId");

                    b.ToTable("StudentQeustions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentSuggestion", b =>
                {
                    b.Property<int>("StudentSuggestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentSuggestionId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StudentSuggestionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("StudentSuggestionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentSuggestionText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentSuggestionId")
                        .HasName("PK__StudentS__699998998D0AD5F3");

                    b.HasIndex("ClassId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentSuggestions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentTimeTable", b =>
                {
                    b.Property<int>("StudentTimeTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentTimeTableId"));

                    b.Property<int>("Classid")
                        .HasColumnType("int");

                    b.Property<string>("StudentTimeTableImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentTimeTableId")
                        .HasName("PK__StudentT__AA15A79782BE5C1F");

                    b.HasIndex("Classid");

                    b.ToTable("StudentTimeTables");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.SubervisorNotification", b =>
                {
                    b.Property<int>("SubervisorNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubervisorNotificationId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.HasKey("SubervisorNotificationId")
                        .HasName("PK__Subervis__C7602C35081D72F4");

                    b.HasIndex("ClassId");

                    b.HasIndex("NotificationId");

                    b.ToTable("SubervisorNotifications");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectId"));

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectBook1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectBook2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectBook3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SubjectId")
                        .HasName("PK__Subjects__AC1BA3A879B1428B");

                    b.HasIndex("LevelId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.SubjectClass", b =>
                {
                    b.Property<int>("SubjectClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubjectClassId"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("SubjectClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectTeacher")
                        .HasColumnType("int");

                    b.HasKey("SubjectClassId")
                        .HasName("PK__SubjectC__56E2859A20F452E1");

                    b.HasIndex("ClassId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("SubjectTeacher");

                    b.ToTable("SubjectClasses");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherAnswer", b =>
                {
                    b.Property<int>("TeacherAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherAnswerId"));

                    b.Property<int>("StudentQeustionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TeacherAnswerDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TeacherAnswerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherAnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherAnswerId")
                        .HasName("PK__TeacherA__A3B38DF96FA7FE6C");

                    b.HasIndex("StudentQeustionId");

                    b.ToTable("TeacherAnswers");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherAttendance", b =>
                {
                    b.Property<int>("TeacherAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherAttendanceId"));

                    b.Property<DateTime>("TeacherAttendanceDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("TeacherAttendanceValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherAttendanceId")
                        .HasName("PK__TeacherA__678A4810386EC33B");

                    b.HasIndex("UserId");

                    b.ToTable("TeacherAttendances");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherEvaluation", b =>
                {
                    b.Property<int>("TeacherEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherEvaluationId"));

                    b.Property<int>("TeacherEvaluationCounter")
                        .HasColumnType("int");

                    b.Property<decimal>("TeacherEvaluationValueOne")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("TeacherEvaluationValueTow")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherEvaluationId")
                        .HasName("PK__TeacherE__0F0C6E47230CE529");

                    b.HasIndex("UserId");

                    b.ToTable("TeacherEvaluations");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherNotification", b =>
                {
                    b.Property<int>("TeacherNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherNotificationId"));

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("SubjectClassId")
                        .HasColumnType("int");

                    b.HasKey("TeacherNotificationId")
                        .HasName("PK__TeacherN__2AF3B40138D4DF00");

                    b.HasIndex("NotificationId");

                    b.HasIndex("SubjectClassId");

                    b.ToTable("TeacherNotifications");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherTable", b =>
                {
                    b.Property<int>("TeacherTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherTableId"));

                    b.Property<string>("PeriodEight")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodFive")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodFour")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodOne")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodSeven")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodSix")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodThree")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PeriodTow")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TheDay")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherTableId")
                        .HasName("PK__TeacherT__D207FF21E6733239");

                    b.HasIndex("UserId");

                    b.ToTable("TeacherTables");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherTimeTable", b =>
                {
                    b.Property<int>("TeacherTimeTableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherTimeTableId"));

                    b.Property<string>("TeacherTimeTableImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("TeacherTimeTableId")
                        .HasName("PK__TeacherT__466F62C43B0B66EB");

                    b.HasIndex("UserId");

                    b.ToTable("TeacherTimeTables");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Term", b =>
                {
                    b.Property<int>("TermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermId"));

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TermId")
                        .HasName("PK__Terms__410A21A5ADECCCA3");

                    b.ToTable("Terms");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool>("IsSupervisor")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Usernumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Userpassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CC4C61B38BAD");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.VclassDegree", b =>
                {
                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("TotalMarks")
                        .HasColumnType("decimal(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("VClassDegrees", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.VclassSubjectDegree", b =>
                {
                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalMarks")
                        .HasColumnType("decimal(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("VClassSubjectDegrees", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.VclassSubjectTermDegree", b =>
                {
                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalMarks")
                        .HasColumnType("decimal(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("VClassSubjectTermDegrees", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.VclassTermDegree", b =>
                {
                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalMarks")
                        .HasColumnType("decimal(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("VClassTermDegrees", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.VteacherEvalution", b =>
                {
                    b.Property<decimal>("TeacherEvaluationValueOne")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("TeacherEvaluationValueTow")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToTable((string)null);

                    b.ToView("VTeacherEvalutions", (string)null);
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Class", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "ClassSopervisorNavigation")
                        .WithMany("Classes")
                        .HasForeignKey("ClassSopervisor")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__ClassSo__44FF419A");

                    b.HasOne("SchoolSystem.DAL.Entites.Level", "Level")
                        .WithMany("Classes")
                        .HasForeignKey("LevelId")
                        .IsRequired()
                        .HasConstraintName("FK__Classes__LevelId__440B1D61");

                    b.Navigation("ClassSopervisorNavigation");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassChat", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("ClassChats")
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassChat__Class__17F790F9");

                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("ClassChats")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__ClassChat__Stude__18EBB532");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassChatImage", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.ClassChat", "ClassChat")
                        .WithMany("ClassChatImages")
                        .HasForeignKey("ClassChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassChat__Class__1BC821DD");

                    b.Navigation("ClassChat");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassTimeTable", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("ClassTimeTables")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ClassTime__Class__5441852A");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.DegreeFile", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.DegreeType", "DegreeType")
                        .WithMany("DegreeFiles")
                        .HasForeignKey("DegreeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DegreeFil__Degre__68487DD7");

                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("DegreeFiles")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DegreeFil__Stude__693CA210");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("DegreeFiles")
                        .HasForeignKey("TermId")
                        .IsRequired()
                        .HasConstraintName("FK__DegreeFil__TermI__6754599E");

                    b.Navigation("DegreeType");

                    b.Navigation("Student");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.FollowUpNoteBook", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("FollowUpNoteBooks")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__FollowUpN__Class__7C4F7684");

                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("FollowUpNoteBooks")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FollowUpN__Subje__7B5B524B");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("FollowUpNoteBooks")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__FollowUpN__TermI__7D439ABD");

                    b.Navigation("Class");

                    b.Navigation("SubjectClass");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.HomeWork", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("HomeWorks")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HomeWorks__Subje__6C190EBB");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("HomeWorks")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HomeWorks__TermI__6D0D32F4");

                    b.Navigation("SubjectClass");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.LaibaryBook", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Section", "Section")
                        .WithMany("LaibaryBooks")
                        .HasForeignKey("Sectionid")
                        .IsRequired()
                        .HasConstraintName("FK__LaibaryBo__Secti__151B244E");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Level", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Department", "Department")
                        .WithMany("Levels")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Levels__Departme__412EB0B6");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Notification", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__UserI__22751F6C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.NotificationRole", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Notification", "Notification")
                        .WithMany("NotificationRoles")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__Notif__25518C17");

                    b.HasOne("SchoolSystem.DAL.Entites.Role", "Role")
                        .WithMany("NotificationRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__RoleI__2645B050");

                    b.Navigation("Notification");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ParentSubervaisorChat", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "ReceverNavigation")
                        .WithMany("ParentSubervaisorChatReceverNavigations")
                        .HasForeignKey("Recever")
                        .IsRequired()
                        .HasConstraintName("FK__ParentSub__Recev__1F98B2C1");

                    b.HasOne("SchoolSystem.DAL.Entites.User", "SenderNavigation")
                        .WithMany("ParentSubervaisorChatSenderNavigations")
                        .HasForeignKey("Sender")
                        .IsRequired()
                        .HasConstraintName("FK__ParentSub__Sende__1EA48E88");

                    b.Navigation("ReceverNavigation");

                    b.Navigation("SenderNavigation");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Reinforcementlesson", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("Reinforcementlessons")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reinforce__Subje__03F0984C");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("Reinforcementlessons")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Reinforce__TermI__04E4BC85");

                    b.Navigation("SubjectClass");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Solution", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.HomeWork", "HomeWork")
                        .WithMany("Solutions")
                        .HasForeignKey("HomeWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solutions__HomeW__6FE99F9F");

                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("Solutions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Solutions__Stude__70DDC3D8");

                    b.Navigation("HomeWork");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Student", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("Students")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__Students__ClassI__5165187F");

                    b.HasOne("SchoolSystem.DAL.Entites.User", "StedentParentNavigation")
                        .WithMany("StudentStedentParentNavigations")
                        .HasForeignKey("StedentParent")
                        .IsRequired()
                        .HasConstraintName("FK__Students__Steden__5070F446");

                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("StudentUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Students__UserId__4F7CD00D");

                    b.Navigation("Class");

                    b.Navigation("StedentParentNavigation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentAttendance", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentAt__Stude__08B54D69");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentAt__TermI__09A971A2");

                    b.Navigation("Student");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentDegree", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.DegreeType", "DegreeType")
                        .WithMany("StudentDegrees")
                        .HasForeignKey("DegreeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentDe__Degre__6477ECF3");

                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("StudentDegrees")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentDe__Stude__628FA481");

                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("StudentDegrees")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentDe__Subje__619B8048");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("StudentDegrees")
                        .HasForeignKey("TermId")
                        .IsRequired()
                        .HasConstraintName("FK__StudentDe__TermI__6383C8BA");

                    b.Navigation("DegreeType");

                    b.Navigation("Student");

                    b.Navigation("SubjectClass");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentQeustion", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("StudentQeustions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentQe__Stude__74AE54BC");

                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("StudentQeustions")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentQe__Subje__73BA3083");

                    b.HasOne("SchoolSystem.DAL.Entites.Term", "Term")
                        .WithMany("StudentQeustions")
                        .HasForeignKey("TermId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentQe__TermI__75A278F5");

                    b.Navigation("Student");

                    b.Navigation("SubjectClass");

                    b.Navigation("Term");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentSuggestion", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("StudentSuggestions")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__Class__01142BA1");

                    b.HasOne("SchoolSystem.DAL.Entites.Student", "Student")
                        .WithMany("StudentSuggestions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentSu__Stude__00200768");

                    b.Navigation("Class");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentTimeTable", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("StudentTimeTables")
                        .HasForeignKey("Classid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__StudentTi__Class__571DF1D5");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.SubervisorNotification", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("SubervisorNotifications")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Suberviso__Class__2DE6D218");

                    b.HasOne("SchoolSystem.DAL.Entites.Notification", "Notification")
                        .WithMany("SubervisorNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Suberviso__Notif__2CF2ADDF");

                    b.Navigation("Class");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Subject", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Level", "Level")
                        .WithMany("Subjects")
                        .HasForeignKey("LevelId")
                        .IsRequired()
                        .HasConstraintName("FK__Subjects__LevelI__47DBAE45");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.SubjectClass", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Class", "Class")
                        .WithMany("SubjectClasses")
                        .HasForeignKey("ClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SubjectCl__Class__4AB81AF0");

                    b.HasOne("SchoolSystem.DAL.Entites.Subject", "Subject")
                        .WithMany("SubjectClasses")
                        .HasForeignKey("SubjectId")
                        .IsRequired()
                        .HasConstraintName("FK__SubjectCl__Subje__4BAC3F29");

                    b.HasOne("SchoolSystem.DAL.Entites.User", "SubjectTeacherNavigation")
                        .WithMany("SubjectClasses")
                        .HasForeignKey("SubjectTeacher")
                        .IsRequired()
                        .HasConstraintName("FK__SubjectCl__Subje__4CA06362");

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("SubjectTeacherNavigation");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherAnswer", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.StudentQeustion", "StudentQeustion")
                        .WithMany("TeacherAnswers")
                        .HasForeignKey("StudentQeustionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherAn__Stude__787EE5A0");

                    b.Navigation("StudentQeustion");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherAttendance", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("TeacherAttendances")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherAt__UserI__10566F31");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherEvaluation", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("TeacherEvaluations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherEv__UserI__0C85DE4D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherNotification", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Notification", "Notification")
                        .WithMany("TeacherNotifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherNo__Notif__29221CFB");

                    b.HasOne("SchoolSystem.DAL.Entites.SubjectClass", "SubjectClass")
                        .WithMany("TeacherNotifications")
                        .HasForeignKey("SubjectClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherNo__Subje__2A164134");

                    b.Navigation("Notification");

                    b.Navigation("SubjectClass");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherTable", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("TeacherTables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherTa__UserI__59FA5E80");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.TeacherTimeTable", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.User", "User")
                        .WithMany("TeacherTimeTables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TeacherTi__UserI__5CD6CB2B");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.User", b =>
                {
                    b.HasOne("SchoolSystem.DAL.Entites.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Users__RoleId__3A81B327");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Class", b =>
                {
                    b.Navigation("ClassChats");

                    b.Navigation("ClassTimeTables");

                    b.Navigation("FollowUpNoteBooks");

                    b.Navigation("StudentSuggestions");

                    b.Navigation("StudentTimeTables");

                    b.Navigation("Students");

                    b.Navigation("SubervisorNotifications");

                    b.Navigation("SubjectClasses");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.ClassChat", b =>
                {
                    b.Navigation("ClassChatImages");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.DegreeType", b =>
                {
                    b.Navigation("DegreeFiles");

                    b.Navigation("StudentDegrees");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Department", b =>
                {
                    b.Navigation("Levels");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.HomeWork", b =>
                {
                    b.Navigation("Solutions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Level", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Notification", b =>
                {
                    b.Navigation("NotificationRoles");

                    b.Navigation("SubervisorNotifications");

                    b.Navigation("TeacherNotifications");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Role", b =>
                {
                    b.Navigation("NotificationRoles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Section", b =>
                {
                    b.Navigation("LaibaryBooks");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Student", b =>
                {
                    b.Navigation("ClassChats");

                    b.Navigation("DegreeFiles");

                    b.Navigation("Solutions");

                    b.Navigation("StudentAttendances");

                    b.Navigation("StudentDegrees");

                    b.Navigation("StudentQeustions");

                    b.Navigation("StudentSuggestions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.StudentQeustion", b =>
                {
                    b.Navigation("TeacherAnswers");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Subject", b =>
                {
                    b.Navigation("SubjectClasses");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.SubjectClass", b =>
                {
                    b.Navigation("FollowUpNoteBooks");

                    b.Navigation("HomeWorks");

                    b.Navigation("Reinforcementlessons");

                    b.Navigation("StudentDegrees");

                    b.Navigation("StudentQeustions");

                    b.Navigation("TeacherNotifications");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.Term", b =>
                {
                    b.Navigation("DegreeFiles");

                    b.Navigation("FollowUpNoteBooks");

                    b.Navigation("HomeWorks");

                    b.Navigation("Reinforcementlessons");

                    b.Navigation("StudentAttendances");

                    b.Navigation("StudentDegrees");

                    b.Navigation("StudentQeustions");
                });

            modelBuilder.Entity("SchoolSystem.DAL.Entites.User", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Notifications");

                    b.Navigation("ParentSubervaisorChatReceverNavigations");

                    b.Navigation("ParentSubervaisorChatSenderNavigations");

                    b.Navigation("StudentStedentParentNavigations");

                    b.Navigation("StudentUsers");

                    b.Navigation("SubjectClasses");

                    b.Navigation("TeacherAttendances");

                    b.Navigation("TeacherEvaluations");

                    b.Navigation("TeacherTables");

                    b.Navigation("TeacherTimeTables");
                });
#pragma warning restore 612, 618
        }
    }
}
